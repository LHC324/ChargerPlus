C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ALLINT
OBJECT MODULE PLACED IN .\Objects\Allint.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Src\Allint.c LARGE OPTIMIZE(0,SPEED) BROWSE INCDIR(.\Inc) DEBUG OBJECTEX
                    -TEND CODE LISTINCLUDE SYMBOLS PRINT(.\Listings\Allint.lst) OBJECT(.\Objects\Allint.obj)

line level    source

   1          #include "Allint.h"
   1      =1  #ifndef __ALLINT_H_
   2      =1  #define __ALLINT_H_
   3      =1  
   4      =1  
   5      =1  
   6      =1  #define FALL_AND_RISE_EDGE 0  //œ¬ΩµªÚ…œ…˝—ÿ÷–∂œ
   7      =1  #define FALL_EDGE  1     //œ¬Ωµ—ÿ÷–∂œ
   8      =1  
   9      =1  #define EX2             0x10  // πƒ‹÷–∂œ2
  10      =1  #define EX3             0x20  // πƒ‹÷–∂œ3
  11      =1  #define EX4             0x40  // πƒ‹÷–∂œ4
  12      =1  
  13      =1  void Int0_init(unsigned char edge);
  14      =1  void Int1_init(unsigned char edge);
  15      =1  void int_234_choose(unsigned char INTC);
  16      =1  
  17      =1  #endif
   2          #include<STC8.h>
   1      =1  #ifndef __STC8F_H_
   2      =1  #define __STC8F_H_
   3      =1  
   4      =1  /////////////////////////////////////////////////
   5      =1  
   6      =1  //ÂåÖÂê´Êú¨Â§¥Êñá‰ª∂Âêé,‰∏çÁî®Âè¶Â§ñÂÜçÂåÖÂê´"REG51.H"
   7      =1  
   8      =1  //ÂÜÖÊ†∏ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
   9      =1  sfr ACC         =   0xe0;
  10      =1  sfr B           =   0xf0;
  11      =1  sfr PSW         =   0xd0;
  12      =1  sbit CY         =   PSW^7;
  13      =1  sbit AC         =   PSW^6;
  14      =1  sbit F0         =   PSW^5;
  15      =1  sbit RS1        =   PSW^4;
  16      =1  sbit RS0        =   PSW^3;
  17      =1  sbit OV         =   PSW^2;
  18      =1  sbit P          =   PSW^0;
  19      =1  sfr SP          =   0x81;
  20      =1  sfr DPL         =   0x82;
  21      =1  sfr DPH         =   0x83;
  22      =1  sfr TA          =   0xae;
  23      =1  sfr DPS         =   0xe3;
  24      =1  sfr DPL1        =   0xe4;
  25      =1  sfr DPH1        =   0xe5;
  26      =1  
  27      =1  
  28      =1  //I/O Âè£ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
  29      =1  sfr P0          =   0x80;
  30      =1  sfr P1          =   0x90;
  31      =1  sfr P2          =   0xa0;
  32      =1  sfr P3          =   0xb0;
  33      =1  sfr P4          =   0xc0;
  34      =1  sfr P5          =   0xc8;
  35      =1  sfr P6          =   0xe8;
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 2   

  36      =1  sfr P7          =   0xf8;
  37      =1  sfr P0M0        =   0x94;
  38      =1  sfr P0M1        =   0x93;
  39      =1  sfr P1M0        =   0x92;
  40      =1  sfr P1M1        =   0x91;
  41      =1  sfr P2M0        =   0x96;
  42      =1  sfr P2M1        =   0x95;
  43      =1  sfr P3M0        =   0xb2;
  44      =1  sfr P3M1        =   0xb1;
  45      =1  sfr P4M0        =   0xb4;
  46      =1  sfr P4M1        =   0xb3;
  47      =1  sfr P5M0        =   0xca;
  48      =1  sfr P5M1        =   0xc9;
  49      =1  sfr P6M0        =   0xcc;
  50      =1  sfr P6M1        =   0xcb;
  51      =1  sfr P7M0        =   0xe2;
  52      =1  sfr P7M1        =   0xe1;
  53      =1  
  54      =1  sbit P00        =   P0^0;
  55      =1  sbit P01        =   P0^1;
  56      =1  sbit P02        =   P0^2;
  57      =1  sbit P03        =   P0^3;
  58      =1  sbit P04        =   P0^4;
  59      =1  sbit P05        =   P0^5;
  60      =1  sbit P06        =   P0^6;
  61      =1  sbit P07        =   P0^7;
  62      =1  sbit P10        =   P1^0;
  63      =1  sbit P11        =   P1^1;
  64      =1  sbit P12        =   P1^2;
  65      =1  sbit P13        =   P1^3;
  66      =1  sbit P14        =   P1^4;
  67      =1  sbit P15        =   P1^5;
  68      =1  sbit P16        =   P1^6;
  69      =1  sbit P17        =   P1^7;
  70      =1  sbit P20        =   P2^0;
  71      =1  sbit P21        =   P2^1;
  72      =1  sbit P22        =   P2^2;
  73      =1  sbit P23        =   P2^3;
  74      =1  sbit P24        =   P2^4;
  75      =1  sbit P25        =   P2^5;
  76      =1  sbit P26        =   P2^6;
  77      =1  sbit P27        =   P2^7;
  78      =1  sbit P30        =   P3^0;
  79      =1  sbit P31        =   P3^1;
  80      =1  sbit P32        =   P3^2;
  81      =1  sbit P33        =   P3^3;
  82      =1  sbit P34        =   P3^4;
  83      =1  sbit P35        =   P3^5;
  84      =1  sbit P36        =   P3^6;
  85      =1  sbit P37        =   P3^7;
  86      =1  sbit P40        =   P4^0;
  87      =1  sbit P41        =   P4^1;
  88      =1  sbit P42        =   P4^2;
  89      =1  sbit P43        =   P4^3;
  90      =1  sbit P44        =   P4^4;
  91      =1  sbit P45        =   P4^5;
  92      =1  sbit P46        =   P4^6;
  93      =1  sbit P47        =   P4^7;
  94      =1  sbit P50        =   P5^0;
  95      =1  sbit P51        =   P5^1;
  96      =1  sbit P52        =   P5^2;
  97      =1  sbit P53        =   P5^3;
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 3   

  98      =1  sbit P54        =   P5^4;
  99      =1  sbit P55        =   P5^5;
 100      =1  sbit P56        =   P5^6;
 101      =1  sbit P57        =   P5^7;
 102      =1  sbit P60        =   P6^0;
 103      =1  sbit P61        =   P6^1;
 104      =1  sbit P62        =   P6^2;
 105      =1  sbit P63        =   P6^3;
 106      =1  sbit P64        =   P6^4;
 107      =1  sbit P65        =   P6^5;
 108      =1  sbit P66        =   P6^6;
 109      =1  sbit P67        =   P6^7;
 110      =1  sbit P70        =   P7^0;
 111      =1  sbit P71        =   P7^1;
 112      =1  sbit P72        =   P7^2;
 113      =1  sbit P73        =   P7^3;
 114      =1  sbit P74        =   P7^4;
 115      =1  sbit P75        =   P7^5;
 116      =1  sbit P76        =   P7^6;
 117      =1  sbit P77        =   P7^7;
 118      =1  
 119      =1  //Â¶Ç‰∏ãÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®‰Ωç‰∫éÊâ©Â±ïRAMÂå∫Âüü
 120      =1  //ËÆøÈóÆËøô‰∫õÂØÑÂ≠òÂô®,ÈúÄÂÖàÂ∞ÜP_SW2ÁöÑBIT7ËÆæÁΩÆ‰∏∫1,ÊâçÂèØÊ≠£Â∏∏ËØªÂÜô
 121      =1  #define P0PU        (*(unsigned char volatile xdata *)0xfe10)
 122      =1  #define P1PU        (*(unsigned char volatile xdata *)0xfe11)
 123      =1  #define P2PU        (*(unsigned char volatile xdata *)0xfe12)
 124      =1  #define P3PU        (*(unsigned char volatile xdata *)0xfe13)
 125      =1  #define P4PU        (*(unsigned char volatile xdata *)0xfe14)
 126      =1  #define P5PU        (*(unsigned char volatile xdata *)0xfe15)
 127      =1  #define P6PU        (*(unsigned char volatile xdata *)0xfe16)
 128      =1  #define P7PU        (*(unsigned char volatile xdata *)0xfe17)
 129      =1  #define P0NCS       (*(unsigned char volatile xdata *)0xfe18)
 130      =1  #define P1NCS       (*(unsigned char volatile xdata *)0xfe19)
 131      =1  #define P2NCS       (*(unsigned char volatile xdata *)0xfe1a)
 132      =1  #define P3NCS       (*(unsigned char volatile xdata *)0xfe1b)
 133      =1  #define P4NCS       (*(unsigned char volatile xdata *)0xfe1c)
 134      =1  #define P5NCS       (*(unsigned char volatile xdata *)0xfe1d)
 135      =1  #define P6NCS       (*(unsigned char volatile xdata *)0xfe1e)
 136      =1  #define P7NCS       (*(unsigned char volatile xdata *)0xfe1f)
 137      =1  
 138      =1  //Á≥ªÁªüÁÆ°ÁêÜÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 139      =1  sfr PCON        =   0x87;
 140      =1  #define SMOD        0x80
 141      =1  #define SMOD0       0x40
 142      =1  #define LVDF        0x20
 143      =1  #define POF         0x10
 144      =1  #define GF1         0x08
 145      =1  #define GF0         0x04
 146      =1  #define PD          0x02
 147      =1  #define IDL         0x01
 148      =1  sfr AUXR        =   0x8e;
 149      =1  #define T0x12       0x80
 150      =1  #define T1x12       0x40
 151      =1  #define UART_M0x6   0x20
 152      =1  #define T2R         0x10
 153      =1  #define T2_CT       0x08
 154      =1  #define T2x12       0x04
 155      =1  #define EXTRAM      0x02
 156      =1  #define S1ST2       0x01
 157      =1  sfr AUXR2       =   0x97;
 158      =1  #define TXLNRX      0x10
 159      =1  sfr BUS_SPEED   =   0xa1;
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 4   

 160      =1  sfr P_SW1       =   0xa2;
 161      =1  sfr P_SW2       =   0xba;
 162      =1  #define EAXFR       0x80
 163      =1  sfr VOCTRL      =   0xbb;
 164      =1  sfr RSTCFG      =   0xff;
 165      =1  
 166      =1  //Â¶Ç‰∏ãÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®‰Ωç‰∫éÊâ©Â±ïRAMÂå∫Âüü
 167      =1  //ËÆøÈóÆËøô‰∫õÂØÑÂ≠òÂô®,ÈúÄÂÖàÂ∞ÜP_SW2ÁöÑBIT7ËÆæÁΩÆ‰∏∫1,ÊâçÂèØÊ≠£Â∏∏ËØªÂÜô
 168      =1  #define CKSEL       (*(unsigned char volatile xdata *)0xfe00)
 169      =1  #define CLKDIV      (*(unsigned char volatile xdata *)0xfe01)
 170      =1  #define IRC24MCR    (*(unsigned char volatile xdata *)0xfe02)
 171      =1  #define XOSCCR      (*(unsigned char volatile xdata *)0xfe03)
 172      =1  #define IRC32KCR    (*(unsigned char volatile xdata *)0xfe04)
 173      =1  
 174      =1  //‰∏≠Êñ≠ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 175      =1  sfr IE          =   0xa8;
 176      =1  sbit EA         =   IE^7;
 177      =1  sbit ELVD       =   IE^6;
 178      =1  sbit EADC       =   IE^5;
 179      =1  sbit ES         =   IE^4;
 180      =1  sbit ET1        =   IE^3;
 181      =1  sbit EX1        =   IE^2;
 182      =1  sbit ET0        =   IE^1;
 183      =1  sbit EX0        =   IE^0;
 184      =1  sfr IE2         =   0xaf;
 185      =1  #define ET4         0x40
 186      =1  #define ET3         0x20
 187      =1  #define ES4         0x10
 188      =1  #define ES3         0x08
 189      =1  #define ET2         0x04
 190      =1  #define ESPI        0x02
 191      =1  #define ES2         0x01
 192      =1  sfr IP          =   0xb8;
 193      =1  sbit PPCA       =   IP^7;
 194      =1  sbit PLVD       =   IP^6;
 195      =1  sbit PADC       =   IP^5;
 196      =1  sbit PS         =   IP^4;
 197      =1  sbit PT1        =   IP^3;
 198      =1  sbit PX1        =   IP^2;
 199      =1  sbit PT0        =   IP^1;
 200      =1  sbit PX0        =   IP^0;
 201      =1  sfr IP2         =   0xb5;
 202      =1  #define PI2C        0x40
 203      =1  #define PCMP        0x20
 204      =1  #define PX4         0x10
 205      =1  #define PPWMFD      0x08
 206      =1  #define PPWM        0x04
 207      =1  #define PSPI        0x02
 208      =1  #define PS2         0x01
 209      =1  sfr IPH         =   0xb7;
 210      =1  #define PPCAH       0x80
 211      =1  #define PLVDH       0x40
 212      =1  #define PADCH       0x20
 213      =1  #define PSH         0x10
 214      =1  #define PT1H        0x08
 215      =1  #define PX1H        0x04
 216      =1  #define PT0H        0x02
 217      =1  #define PX0H        0x01
 218      =1  sfr IP2H        =   0xb6;
 219      =1  #define PI2CH       0x40
 220      =1  #define PCMPH       0x20
 221      =1  #define PX4H        0x10
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 5   

 222      =1  #define PPWMFDH     0x08
 223      =1  #define PPWMH       0x04
 224      =1  #define PSPIH       0x02
 225      =1  #define PS2H        0x01
 226      =1  sfr INTCLKO     =   0x8f;
 227      =1  #define EX4         0x40
 228      =1  #define EX3         0x20
 229      =1  #define EX2         0x10
 230      =1  #define T2CLKO      0x04
 231      =1  #define T1CLKO      0x02
 232      =1  #define T0CLKO      0x01
 233      =1  sfr AUXINTIF    =   0xef;
 234      =1  #define INT4IF      0x40
 235      =1  #define INT3IF      0x20
 236      =1  #define INT2IF      0x10
 237      =1  #define T4IF        0x04
 238      =1  #define T3IF        0x02
 239      =1  #define T2IF        0x01
 240      =1  
 241      =1  //ÂÆöÊó∂Âô®ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 242      =1  sfr TCON        =   0x88;
 243      =1  sbit TF1        =   TCON^7;
 244      =1  sbit TR1        =   TCON^6;
 245      =1  sbit TF0        =   TCON^5;
 246      =1  sbit TR0        =   TCON^4;
 247      =1  sbit IE1        =   TCON^3;
 248      =1  sbit IT1        =   TCON^2;
 249      =1  sbit IE0        =   TCON^1;
 250      =1  sbit IT0        =   TCON^0;
 251      =1  sfr TMOD        =   0x89;
 252      =1  #define T1_GATE     0x80
 253      =1  #define T1_CT       0x40
 254      =1  #define T1_M1       0x20
 255      =1  #define T1_M0       0x10
 256      =1  #define T0_GATE     0x08
 257      =1  #define T0_CT       0x04
 258      =1  #define T0_M1       0x02
 259      =1  #define T0_M0       0x01
 260      =1  sfr TL0         =   0x8a;
 261      =1  sfr TL1         =   0x8b;
 262      =1  sfr TH0         =   0x8c;
 263      =1  sfr TH1         =   0x8d;
 264      =1  sfr T4T3M       =   0xd1;
 265      =1  #define T4R         0x80
 266      =1  #define T4_CT       0x40
 267      =1  #define T4x12       0x20
 268      =1  #define T4CLKO      0x10
 269      =1  #define T3R         0x08
 270      =1  #define T3_CT       0x04
 271      =1  #define T3x12       0x02
 272      =1  #define T3CLKO      0x01
 273      =1  sfr T4H         =   0xd2;
 274      =1  sfr T4L         =   0xd3;
 275      =1  sfr T3H         =   0xd4;
 276      =1  sfr T3L         =   0xd5;
 277      =1  sfr T2H         =   0xd6;
 278      =1  sfr T2L         =   0xd7;
 279      =1  sfr TH4         =   0xd2;
 280      =1  sfr TL4         =   0xd3;
 281      =1  sfr TH3         =   0xd4;
 282      =1  sfr TL3         =   0xd5;
 283      =1  sfr TH2         =   0xd6;
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 6   

 284      =1  sfr TL2         =   0xd7;
 285      =1  sfr WKTCL       =   0xaa;
 286      =1  sfr WKTCH       =   0xab;
 287      =1  #define WKTEN       0x80
 288      =1  sfr WDT_CONTR   =   0xc1;
 289      =1  #define WDT_FLAG    0x80
 290      =1  #define EN_WDT      0x20
 291      =1  #define CLR_WDT     0x10
 292      =1  #define IDL_WDT     0x08
 293      =1  
 294      =1  //‰∏≤Ë°åÂè£ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 295      =1  sfr SCON        =   0x98;
 296      =1  sbit SM0        =   SCON^7;
 297      =1  sbit SM1        =   SCON^6;
 298      =1  sbit SM2        =   SCON^5;
 299      =1  sbit REN        =   SCON^4;
 300      =1  sbit TB8        =   SCON^3;
 301      =1  sbit RB8        =   SCON^2;
 302      =1  sbit TI         =   SCON^1;
 303      =1  sbit RI         =   SCON^0;
 304      =1  sfr SBUF        =   0x99;
 305      =1  sfr S2CON       =   0x9a;
 306      =1  #define S2SM0       0x80
 307      =1  #define S2ST4       0x40
 308      =1  #define S2SM2       0x20
 309      =1  #define S2REN       0x10
 310      =1  #define S2TB8       0x08
 311      =1  #define S2RB8       0x04
 312      =1  #define S2TI        0x02
 313      =1  #define S2RI        0x01
 314      =1  sfr S2BUF       =   0x9b;
 315      =1  sfr S3CON       =   0xac;
 316      =1  #define S3SM0       0x80
 317      =1  #define S3ST4       0x40
 318      =1  #define S3SM2       0x20
 319      =1  #define S3REN       0x10
 320      =1  #define S3TB8       0x08
 321      =1  #define S3RB8       0x04
 322      =1  #define S3TI        0x02
 323      =1  #define S3RI        0x01
 324      =1  sfr S3BUF       =   0xad;
 325      =1  sfr S4CON       =   0x84;
 326      =1  #define S4SM0       0x80
 327      =1  #define S4ST4       0x40
 328      =1  #define S4SM2       0x20
 329      =1  #define S4REN       0x10
 330      =1  #define S4TB8       0x08
 331      =1  #define S4RB8       0x04
 332      =1  #define S4TI        0x02
 333      =1  #define S4RI        0x01
 334      =1  sfr S4BUF       =   0x85;
 335      =1  sfr SADDR       =   0xa9;
 336      =1  sfr SADEN       =   0xb9;
 337      =1  
 338      =1  //ADC ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 339      =1  sfr ADC_CONTR   =   0xbc;
 340      =1  #define ADC_POWER   0x80
 341      =1  #define ADC_START   0x40
 342      =1  #define ADC_FLAG    0x20
 343      =1  sfr ADC_RES     =   0xbd;
 344      =1  sfr ADC_RESL    =   0xbe;
 345      =1  sfr ADCCFG      =   0xde;
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 7   

 346      =1  #define ADC_RESFMT  0x20
 347      =1  
 348      =1  //SPI ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 349      =1  sfr SPSTAT      =   0xcd;
 350      =1  #define SPIF        0x80
 351      =1  #define WCOL        0x40
 352      =1  sfr SPCTL       =   0xce;
 353      =1  #define SSIG        0x80
 354      =1  #define SPEN        0x40
 355      =1  #define DORD        0x20
 356      =1  #define MSTR        0x10
 357      =1  #define CPOL        0x08
 358      =1  #define CPHA        0x04
 359      =1  sfr SPDAT       =   0xcf;
 360      =1  
 361      =1  //IAP/ISP ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 362      =1  sfr IAP_DATA    =   0xc2;
 363      =1  sfr IAP_ADDRH   =   0xc3;
 364      =1  sfr IAP_ADDRL   =   0xc4;
 365      =1  sfr IAP_CMD     =   0xc5;
 366      =1  #define IAP_IDL     0x00
 367      =1  #define IAP_READ    0x01
 368      =1  #define IAP_WRITE   0x02
 369      =1  #define IAP_ERASE   0x03
 370      =1  sfr IAP_TRIG    =   0xc6;
 371      =1  sfr IAP_CONTR   =   0xc7;
 372      =1  #define IAPEN       0x80
 373      =1  #define SWBS        0x40
 374      =1  #define SWRST       0x20
 375      =1  #define CMD_FAIL    0x10
 376      =1  sfr ISP_DATA    =   0xc2;
 377      =1  sfr ISP_ADDRH   =   0xc3;
 378      =1  sfr ISP_ADDRL   =   0xc4;
 379      =1  sfr ISP_CMD     =   0xc5;
 380      =1  sfr ISP_TRIG    =   0xc6;
 381      =1  sfr ISP_CONTR   =   0xc7;
 382      =1  
 383      =1  //ÊØîËæÉÂô®ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 384      =1  sfr CMPCR1      =   0xe6;
 385      =1  #define CMPEN       0x80
 386      =1  #define CMPIF       0x40
 387      =1  #define PIE         0x20
 388      =1  #define NIE         0x10
 389      =1  #define PIS         0x08
 390      =1  #define NIS         0x04
 391      =1  #define CMPOE       0x02
 392      =1  #define CMPRES      0x01
 393      =1  sfr CMPCR2      =   0xe7;
 394      =1  #define INVCMPO     0x80
 395      =1  #define DISFLT      0x40
 396      =1  
 397      =1  //PCA/PWM ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 398      =1  sfr CCON        =   0xd8;
 399      =1  sbit CF         =   CCON^7;
 400      =1  sbit CR         =   CCON^6;
 401      =1  sbit CCF3       =   CCON^3;
 402      =1  sbit CCF2       =   CCON^2;
 403      =1  sbit CCF1       =   CCON^1;
 404      =1  sbit CCF0       =   CCON^0;
 405      =1  sfr CMOD        =   0xd9;
 406      =1  #define CIDL        0x80
 407      =1  #define ECF         0x01
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 8   

 408      =1  sfr CL          =   0xe9;
 409      =1  sfr CH          =   0xf9;
 410      =1  sfr CCAPM0      =   0xda;
 411      =1  #define ECOM0       0x40
 412      =1  #define CCAPP0      0x20
 413      =1  #define CCAPN0      0x10
 414      =1  #define MAT0        0x08
 415      =1  #define TOG0        0x04
 416      =1  #define PWM0        0x02
 417      =1  #define ECCF0       0x01
 418      =1  sfr CCAPM1      =   0xdb;
 419      =1  #define ECOM1       0x40
 420      =1  #define CCAPP1      0x20
 421      =1  #define CCAPN1      0x10
 422      =1  #define MAT1        0x08
 423      =1  #define TOG1        0x04
 424      =1  #define PWM1        0x02
 425      =1  #define ECCF1       0x01
 426      =1  sfr CCAPM2      =   0xdc;
 427      =1  #define ECOM2       0x40
 428      =1  #define CCAPP2      0x20
 429      =1  #define CCAPN2      0x10
 430      =1  #define MAT2        0x08
 431      =1  #define TOG2        0x04
 432      =1  #define PWM2        0x02
 433      =1  #define ECCF2       0x01
 434      =1  sfr CCAPM3      =   0xdd;
 435      =1  #define ECOM3       0x40
 436      =1  #define CCAPP3      0x20
 437      =1  #define CCAPN3      0x10
 438      =1  #define MAT3        0x08
 439      =1  #define TOG3        0x04
 440      =1  #define PWM3        0x02
 441      =1  #define ECCF3       0x01
 442      =1  sfr CCAP0L      =   0xea;
 443      =1  sfr CCAP1L      =   0xeb;
 444      =1  sfr CCAP2L      =   0xec;
 445      =1  sfr CCAP3L      =   0xed;
 446      =1  sfr CCAP0H      =   0xfa;
 447      =1  sfr CCAP1H      =   0xfb;
 448      =1  sfr CCAP2H      =   0xfc;
 449      =1  sfr CCAP3H      =   0xfd;
 450      =1  sfr PCA_PWM0    =   0xf2;
 451      =1  sfr PCA_PWM1    =   0xf3;
 452      =1  sfr PCA_PWM2    =   0xf4;
 453      =1  sfr PCA_PWM3    =   0xf5;
 454      =1  
 455      =1  //Â¢ûÂº∫ÂûãPWMÊ≥¢ÂΩ¢ÂèëÁîüÂô®ÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 456      =1  sfr PWMCFG      =   0xf1;
 457      =1  #define CBIF        0x80
 458      =1  #define ETADC       0x40
 459      =1  sfr PWMIF       =   0xf6;
 460      =1  #define C7IF        0x80
 461      =1  #define C6IF        0x40
 462      =1  #define C5IF        0x20
 463      =1  #define C4IF        0x10
 464      =1  #define C3IF        0x08
 465      =1  #define C2IF        0x04
 466      =1  #define C1IF        0x02
 467      =1  #define C0IF        0x01
 468      =1  sfr PWMFDCR     =   0xf7;
 469      =1  #define INVCMP      0x80
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 9   

 470      =1  #define INVIO       0x40
 471      =1  #define ENFD        0x20
 472      =1  #define FLTFLIO     0x10
 473      =1  #define EFDI        0x08
 474      =1  #define FDCMP       0x04
 475      =1  #define FDIO        0x02
 476      =1  #define FDIF        0x01
 477      =1  sfr PWMCR       =   0xfe;
 478      =1  #define ENPWM       0x80
 479      =1  #define ECBI        0x40
 480      =1  
 481      =1  //Â¶Ç‰∏ãÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®‰Ωç‰∫éÊâ©Â±ïRAMÂå∫Âüü
 482      =1  //ËÆøÈóÆËøô‰∫õÂØÑÂ≠òÂô®,ÈúÄÂÖàÂ∞ÜP_SW2ÁöÑBIT7ËÆæÁΩÆ‰∏∫1,ÊâçÂèØÊ≠£Â∏∏ËØªÂÜô
 483      =1  #define PWMC        (*(unsigned int  volatile xdata *)0xfff0)
 484      =1  #define PWMCH       (*(unsigned char volatile xdata *)0xfff0)
 485      =1  #define PWMCL       (*(unsigned char volatile xdata *)0xfff1)
 486      =1  #define PWMCKS      (*(unsigned char volatile xdata *)0xfff2)
 487      =1  #define TADCP       (*(unsigned char volatile xdata *)0xfff3)
 488      =1  #define TADCPH      (*(unsigned char volatile xdata *)0xfff3)
 489      =1  #define TADCPL      (*(unsigned char volatile xdata *)0xfff4)
 490      =1  #define PWM0T1      (*(unsigned int  volatile xdata *)0xff00)
 491      =1  #define PWM0T1H     (*(unsigned char volatile xdata *)0xff00)
 492      =1  #define PWM0T1L     (*(unsigned char volatile xdata *)0xff01)
 493      =1  #define PWM0T2      (*(unsigned int  volatile xdata *)0xff02)
 494      =1  #define PWM0T2H     (*(unsigned char volatile xdata *)0xff02)
 495      =1  #define PWM0T2L     (*(unsigned char volatile xdata *)0xff03)
 496      =1  #define PWM0CR      (*(unsigned char volatile xdata *)0xff04)
 497      =1  #define PWM0HLD     (*(unsigned char volatile xdata *)0xff05)
 498      =1  #define PWM1T1      (*(unsigned int  volatile xdata *)0xff10)
 499      =1  #define PWM1T1H     (*(unsigned char volatile xdata *)0xff10)
 500      =1  #define PWM1T1L     (*(unsigned char volatile xdata *)0xff11)
 501      =1  #define PWM1T2      (*(unsigned int  volatile xdata *)0xff12)
 502      =1  #define PWM1T2H     (*(unsigned char volatile xdata *)0xff12)
 503      =1  #define PWM1T2L     (*(unsigned char volatile xdata *)0xff13)
 504      =1  #define PWM1CR      (*(unsigned char volatile xdata *)0xff14)
 505      =1  #define PWM1HLD     (*(unsigned char volatile xdata *)0xff15)
 506      =1  #define PWM2T1      (*(unsigned int  volatile xdata *)0xff20)
 507      =1  #define PWM2T1H     (*(unsigned char volatile xdata *)0xff20)
 508      =1  #define PWM2T1L     (*(unsigned char volatile xdata *)0xff21)
 509      =1  #define PWM2T2      (*(unsigned int  volatile xdata *)0xff22)
 510      =1  #define PWM2T2H     (*(unsigned char volatile xdata *)0xff22)
 511      =1  #define PWM2T2L     (*(unsigned char volatile xdata *)0xff23)
 512      =1  #define PWM2CR      (*(unsigned char volatile xdata *)0xff24)
 513      =1  #define PWM2HLD     (*(unsigned char volatile xdata *)0xff25)
 514      =1  #define PWM3T1      (*(unsigned int  volatile xdata *)0xff30)
 515      =1  #define PWM3T1H     (*(unsigned char volatile xdata *)0xff30)
 516      =1  #define PWM3T1L     (*(unsigned char volatile xdata *)0xff31)
 517      =1  #define PWM3T2      (*(unsigned int  volatile xdata *)0xff32)
 518      =1  #define PWM3T2H     (*(unsigned char volatile xdata *)0xff32)
 519      =1  #define PWM3T2L     (*(unsigned char volatile xdata *)0xff33)
 520      =1  #define PWM3CR      (*(unsigned char volatile xdata *)0xff34)
 521      =1  #define PWM3HLD     (*(unsigned char volatile xdata *)0xff35)
 522      =1  #define PWM4T1      (*(unsigned int  volatile xdata *)0xff40)
 523      =1  #define PWM4T1H     (*(unsigned char volatile xdata *)0xff40)
 524      =1  #define PWM4T1L     (*(unsigned char volatile xdata *)0xff41)
 525      =1  #define PWM4T2      (*(unsigned int  volatile xdata *)0xff42)
 526      =1  #define PWM4T2H     (*(unsigned char volatile xdata *)0xff42)
 527      =1  #define PWM4T2L     (*(unsigned char volatile xdata *)0xff43)
 528      =1  #define PWM4CR      (*(unsigned char volatile xdata *)0xff44)
 529      =1  #define PWM4HLD     (*(unsigned char volatile xdata *)0xff45)
 530      =1  #define PWM5T1      (*(unsigned int  volatile xdata *)0xff50)
 531      =1  #define PWM5T1H     (*(unsigned char volatile xdata *)0xff50)
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 10  

 532      =1  #define PWM5T1L     (*(unsigned char volatile xdata *)0xff51)
 533      =1  #define PWM5T2      (*(unsigned int  volatile xdata *)0xff52)
 534      =1  #define PWM5T2H     (*(unsigned char volatile xdata *)0xff52)
 535      =1  #define PWM5T2L     (*(unsigned char volatile xdata *)0xff53)
 536      =1  #define PWM5CR      (*(unsigned char volatile xdata *)0xff54)
 537      =1  #define PWM5HLD     (*(unsigned char volatile xdata *)0xff55)
 538      =1  #define PWM6T1      (*(unsigned int  volatile xdata *)0xff60)
 539      =1  #define PWM6T1H     (*(unsigned char volatile xdata *)0xff60)
 540      =1  #define PWM6T1L     (*(unsigned char volatile xdata *)0xff61)
 541      =1  #define PWM6T2      (*(unsigned int  volatile xdata *)0xff62)
 542      =1  #define PWM6T2H     (*(unsigned char volatile xdata *)0xff62)
 543      =1  #define PWM6T2L     (*(unsigned char volatile xdata *)0xff63)
 544      =1  #define PWM6CR      (*(unsigned char volatile xdata *)0xff64)
 545      =1  #define PWM6HLD     (*(unsigned char volatile xdata *)0xff65)
 546      =1  #define PWM7T1      (*(unsigned int  volatile xdata *)0xff70)
 547      =1  #define PWM7T1H     (*(unsigned char volatile xdata *)0xff70)
 548      =1  #define PWM7T1L     (*(unsigned char volatile xdata *)0xff71)
 549      =1  #define PWM7T2      (*(unsigned int  volatile xdata *)0xff72)
 550      =1  #define PWM7T2H     (*(unsigned char volatile xdata *)0xff72)
 551      =1  #define PWM7T2L     (*(unsigned char volatile xdata *)0xff73)
 552      =1  #define PWM7CR      (*(unsigned char volatile xdata *)0xff74)
 553      =1  #define PWM7HLD     (*(unsigned char volatile xdata *)0xff75)
 554      =1  
 555      =1  //I2CÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®
 556      =1  //Â¶Ç‰∏ãÁâπÊÆäÂäüËÉΩÂØÑÂ≠òÂô®‰Ωç‰∫éÊâ©Â±ïRAMÂå∫Âüü
 557      =1  //ËÆøÈóÆËøô‰∫õÂØÑÂ≠òÂô®,ÈúÄÂÖàÂ∞ÜP_SW2ÁöÑBIT7ËÆæÁΩÆ‰∏∫1,ÊâçÂèØÊ≠£Â∏∏ËØªÂÜô
 558      =1  #define I2CCFG      (*(unsigned char volatile xdata *)0xfe80)
 559      =1  #define ENI2C       0x80
 560      =1  #define MSSL        0x40
 561      =1  #define I2CMSCR     (*(unsigned char volatile xdata *)0xfe81)
 562      =1  #define EMSI        0x80
 563      =1  #define I2CMSST     (*(unsigned char volatile xdata *)0xfe82)
 564      =1  #define MSBUSY      0x80
 565      =1  #define MSIF        0x40
 566      =1  #define MSACKI      0x02
 567      =1  #define MSACKO      0x01
 568      =1  #define I2CSLCR     (*(unsigned char volatile xdata *)0xfe83)
 569      =1  #define ESTAI       0x40
 570      =1  #define ERXI        0x20
 571      =1  #define ETXI        0x10
 572      =1  #define ESTOI       0x08
 573      =1  #define SLRST       0x01
 574      =1  #define I2CSLST     (*(unsigned char volatile xdata *)0xfe84)
 575      =1  #define SLBUSY      0x80
 576      =1  #define STAIF       0x40
 577      =1  #define RXIF        0x20
 578      =1  #define TXIF        0x10
 579      =1  #define STOIF       0x08
 580      =1  #define TXING       0x04
 581      =1  #define SLACKI      0x02
 582      =1  #define SLACKO      0x01
 583      =1  #define I2CSLADR    (*(unsigned char volatile xdata *)0xfe85)
 584      =1  #define I2CTXD      (*(unsigned char volatile xdata *)0xfe86)
 585      =1  #define I2CRXD      (*(unsigned char volatile xdata *)0xfe87)
 586      =1  
 587      =1  /////////////////////////////////////////////////
 588      =1  
 589      =1  #endif
 590      =1  
   3          /*********************************************************
   4          * ÂáΩÊï∞ÂêçÔºövoid Int0_init(unsigned char edge)
   5          * ÂäüËÉΩÔºö  ÂàùÂßãÂåñÂ§ñÈÉ®‰∏≠Êñ≠0
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 11  

   6          * ÂèÇÊï∞Ôºö  char edge ÔºöËß¶ÂèëÊñπÂºè ÔºöFALL_AND_RISE_EDGE 0  //‰∏ãÈôçÊàñ‰∏äÂçáÊ≤ø‰∏≠Êñ≠
   7                                                                           FALL_EDGE 1     //‰∏ãÈôçÊ≤ø‰∏≠Êñ≠
   8          * ‰ΩúËÄÖÔºözhao1peng
   9          * noteÔºö Â§ñÈÉ®‰∏≠Êñ≠ 0 1 ÊîØÊåÅ‰∏ãÈôçÊ≤ø‰∏≠Êñ≠ÊàñËÄÖ‰∏äÂçáÊ≤ø‰∏ãÈôçÊ≤øËß¶Âèë‰∏≠Êñ≠ ÂíåÊ†πÊçÆÂÆûÈôÖÈúÄÊ±Ç
             -ËøõË°åÈÄâÊã©
  10          *
  11          **********************************************************/
  12          
  13          void Int0_init(unsigned char edge)
  14          {
  15   1              IT0 = edge;                                    //‰ΩøËÉΩINT0‰∏äÂçáÊ≤øÂíå‰∏ãÈôçÊ≤ø‰∏≠Êñ≠
  16   1          EX0 = 1;                                    //‰ΩøËÉΩINT0‰∏≠Êñ≠
  17   1          EA = 1;     
  18   1      }
  19          
  20          void Int1_init(unsigned char edge)
  21          {
  22   1              IT1 = edge;                                    //‰ΩøËÉΩINT1‰∏äÂçáÊ≤øÂíå‰∏ãÈôçÊ≤ø‰∏≠Êñ≠
  23   1          EX1 = 1;                                    //‰ΩøËÉΩINT1‰∏≠Êñ≠
  24   1          EA = 1;
  25   1      }
  26          
  27           /*********************************************************
  28          * ÂáΩÊï∞ÂêçÔºövoid int_234_choose(unsigned char INTC)
  29          * ÂäüËÉΩÔºö  Â§ñÈÉ®‰∏≠Êñ≠2 3 4 ÁöÑÂàùÂßãÂåñ
  30          * ÂèÇÊï∞Ôºö  unsigned char INTC
  31                                                   EX2             0x10  //‰ΩøËÉΩ‰∏≠Êñ≠2
  32                                                   EX3             0x20  //‰ΩøËÉΩ‰∏≠Êñ≠3
  33                                                   EX4             0x40  //‰ΩøËÉΩ‰∏≠Êñ≠4
  34          * ‰ΩúËÄÖÔºözhao1peng
  35          * noteÔºö
  36          *         Â§ñÈÉ®‰∏≠Êñ≠ 2 3 4 Âè™ÊîØÊåÅ‰∏ãÈôçÊ≤ø‰∏≠Êñ≠
  37          *
  38          **********************************************************/
  39          void int_234_choose(unsigned char INTC)
  40          {
  41   1              switch(INTC)
  42   1              {
  43   2                      case EX2: INTCLKO = INTC;
  44   2                      break;
  45   2                      case EX3: INTCLKO = INTC;
  46   2                      break;
  47   2                      case EX4: INTCLKO = INTC;
  48   2                      break;
  49   2                      default:
  50   2                      break;
  51   2              }
  52   1               EA = 1;
  53   1      }
  54          
  55           //***************************************************************************
  56           /*********************************************************
  57          * ÂáΩÊï∞ÂêçÔºö
  58          * ÂäüËÉΩÔºö  ‰ª•‰∏ã‰∏∫ÂêÑ‰∏™Â§ñÈÉ®‰∏≠Êñ≠ÁöÑ‰∏≠Êñ≠ÊúçÂä°ÂáΩÊï∞
  59          * ÂèÇÊï∞Ôºö
  60          * ‰ΩúËÄÖÔºözhao1peng
  61          * noteÔºö
  62          *               Áî®Êà∑ÂèØÊ†πÊçÆÂÆûÈôÖÈúÄÊ±ÇÊù•ÁºñÂÜô‰∏≠Êñ≠ÊúçÂä°ÂáΩÊï∞
  63          **********************************************************/
  64          void INT0_Isr() interrupt 0       //Â§ñÈÉ®‰∏≠Êñ≠1ÁöÑ‰∏≠Êñ≠ÊúçÂä°ÂáΩÊï∞
  65          {
  66   1          //add your code
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 12  

  67   1      
  68   1      //       LED1 = ~LED1;
  69   1      //     LED2 = ~LED2;
  70   1      
  71   1      
  72   1      }
  73          void INT1_Isr() interrupt 2
  74          {
  75   1         //add your code
  76   1         
  77   1          
  78   1      }
  79          void INT2_Isr() interrupt 10
  80          {
  81   1          //add your code
  82   1      
  83   1      
  84   1      }
  85          
  86          void INT3_Isr() interrupt 11
  87          {
  88   1          //add your code
  89   1      
  90   1      
  91   1      }
  92          
  93          void INT4_Isr() interrupt 16
  94          {
  95   1           //add your code
  96   1      
  97   1      
  98   1      
  99   1      }
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 13  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _Int0_init (BEGIN)
                                           ; SOURCE LINE # 13
0000 900000      R     MOV     DPTR,#edge
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 15
0005 900000      R     MOV     DPTR,#edge
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 24FF              ADD     A,#0FFH
000D 9288              MOV     IT0,C
                                           ; SOURCE LINE # 16
000F D2A8              SETB    EX0
                                           ; SOURCE LINE # 17
0011 D2AF              SETB    EA
                                           ; SOURCE LINE # 18
0013 22                RET     
             ; FUNCTION _Int0_init (END)

             ; FUNCTION _Int1_init (BEGIN)
                                           ; SOURCE LINE # 20
0000 900000      R     MOV     DPTR,#edge
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
0005 900000      R     MOV     DPTR,#edge
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 24FF              ADD     A,#0FFH
000D 928A              MOV     IT1,C
                                           ; SOURCE LINE # 23
000F D2AA              SETB    EX1
                                           ; SOURCE LINE # 24
0011 D2AF              SETB    EA
                                           ; SOURCE LINE # 25
0013 22                RET     
             ; FUNCTION _Int1_init (END)

             ; FUNCTION _int_234_choose (BEGIN)
                                           ; SOURCE LINE # 39
0000 900000      R     MOV     DPTR,#INTC
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
0005 900000      R     MOV     DPTR,#INTC
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 120000      E     LCALL   ?C?CCASE
000E 0000        R     DW      ?C0004
0010 10                DB      010H
0011 0000        R     DW      ?C0005
0013 20                DB      020H
0014 0000        R     DW      ?C0006
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 14  

0016 40                DB      040H
0017 0000              DW      00H
0019 0000        R     DW      ?C0003
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
001B         ?C0004:
001B 900000      R     MOV     DPTR,#INTC
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 8F8F              MOV     INTCLKO,R7
                                           ; SOURCE LINE # 44
0022 8010              SJMP    ?C0003
                                           ; SOURCE LINE # 45
0024         ?C0005:
0024 900000      R     MOV     DPTR,#INTC
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 8F8F              MOV     INTCLKO,R7
                                           ; SOURCE LINE # 46
002B 8007              SJMP    ?C0003
                                           ; SOURCE LINE # 47
002D         ?C0006:
002D 900000      R     MOV     DPTR,#INTC
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 8F8F              MOV     INTCLKO,R7
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0034         ?C0003:
                                           ; SOURCE LINE # 52
0034 D2AF              SETB    EA
                                           ; SOURCE LINE # 53
0036 22                RET     
             ; FUNCTION _int_234_choose (END)

             ; FUNCTION INT0_Isr (BEGIN)
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 72
0000 32                RETI    
             ; FUNCTION INT0_Isr (END)

             ; FUNCTION INT1_Isr (BEGIN)
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 78
0000 32                RETI    
             ; FUNCTION INT1_Isr (END)

             ; FUNCTION INT2_Isr (BEGIN)
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 84
0000 32                RETI    
             ; FUNCTION INT2_Isr (END)

             ; FUNCTION INT3_Isr (BEGIN)
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 91
0000 32                RETI    
             ; FUNCTION INT3_Isr (END)

             ; FUNCTION INT4_Isr (BEGIN)
C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 15  

                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 99
0000 32                RETI    
             ; FUNCTION INT4_Isr (END)

C51 COMPILER V9.60.0.0   ALLINT                                                            09/08/2021 17:15:49 PAGE 16  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
P5 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
P6 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
P7 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
INTCLKO. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008FH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
CCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
INT0_Isr . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_int_234_choose. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  INTC . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
INT1_Isr . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
INT2_Isr . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
INT3_Isr . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
INT4_Isr . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
_Int0_init . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  edge . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
_Int1_init . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  edge . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    100    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
